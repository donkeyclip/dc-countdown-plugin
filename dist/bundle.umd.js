!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("@donkeyclip/motorcortex")):"function"==typeof define&&define.amd?define(["@donkeyclip/motorcortex"],t):(e="undefined"!=typeof globalThis?globalThis:e||self)["my-plugin-name"]=t(e.MotorCortex)}(this,(function(e){"use strict";class t extends e.Effect{getScratchValue(){return 0}onGetContext(){const e=Date.now(),t=this.targetValue-e;if("seconds"===this.attrs.type)this.down=e=>{console.log("here");const o=Math.floor(e/1e3);return(t-o)%60};else if("minutes"===this.attrs.type)this.down=e=>{const o=Math.floor(e/1e3),n=(t-o)%3600;return Math.floor(n/60)};else{if("hours"!==this.attrs.type)throw new Error("Invalid type for countdown effect");this.down=e=>{const o=Math.floor(e/1e3),n=(t-o)%86400;return Math.floor(n/3600)}}if("free"===this.attrs.operation){const e=t=>{const o=this.down(t);this.element.innerHTML=o,requestAnimationFrame(e)};requestAnimationFrame(e)}}onProgress(e){if("free"===this.attrs.operation)return;const t=this.down(e);this.element.innerHTML=t}}return{npm_name:"my-plugin-name",version:"0.0.1",incidents:[{exportable:t,name:"Countdown"}]}}));
